!function(t,e){"use strict";function i(t){this.viewport=t,this.parent=t.parentNode,this.initialize()}var s={38:"previous",40:"next",72:"nav",83:"focus",84:"toggle"};i.prototype.initialize=function(){this.content=this.viewport.getElementsByTagName("section")[0],this.articles=this.content.getElementsByTagName("article"),this.initFrame().initNav(),t.addEventListener("resize",this.redraw.bind(this)),t.addEventListener("keydown",this.hotkeys.bind(this))},i.prototype.setAttributes=Atomic.prototype.setAttributes,i.prototype.text=function(t){return t.innerText||t.textContent},i.prototype.redraw=function(){this.setAttributes(this.frame,{height:this.parent.offsetHeight+"px",width:this.parent.offsetWidth+"px"})},i.prototype.initFrame=function(){var t=this.frame=e.createElement("iframe");return this.setAttributes(t,{seamless:!0,height:this.parent.offsetHeight+"px",width:this.parent.offsetWidth+"px",src:this.viewport.getAttribute("data-load")}),this.viewport.insertBefore(t,this.viewport.firstChild),this},i.prototype.initNav=function(){for(var i,s,n=["<input type=text value=0 readonly><ol>","</ol><canvas></canvas>"],r=this.setAttributes(e.createElement("section"),{"class":"atomic"}),a=this.viewport.getElementsByTagName("nav")[0],o=(t.getComputedStyle(this.articles[0]),this.articles.length),h=o;h--;)s=this.articles[h],i=s.getElementsByTagName("h1")[0],n.splice(1,0,"<li><label>"+this.text(i)+"</label></li>"),s.appendChild(this.setAttributes(e.createElement("label"),{"for":"i"+h}));for(r.innerHTML=n.join(""),a.appendChild(r),this.index=-1,this.searchbox=a.getElementsByTagName("input")[0],this.atomic=new Atomic(r,this.viewport),this.max=o-1;o--;)this.atomic.radio[o].addEventListener("change",this.update.bind(this,o));return a.getElementsByTagName("form")[0].addEventListener("submit",this.search.bind(this)),this},i.prototype.search=function(t){t.preventDefault();var e,i,s,n=this.searchbox.value,r=this.articles.length,a=new RegExp("("+n+")","ig");if(n)for(;r--;)if(e=this.articles[r],a.test(this.text(e)))for(i=e.getElementsByTagName("*"),s=i.length;s--;)i[s].innerHTML=this.text(i[s]).replace(a,"<mark>$1</mark>")},i.prototype.render=function(){this.reset().atomic.update(this.atomic.radio[this.index].value)},i.prototype.update=function(t){this.reset(),this.index=t},i.prototype.previous=function(){--this.index<0&&(this.index=0),this.render()},i.prototype.next=function(){++this.index>this.max&&(this.index=this.max),this.render()},i.prototype.toggle=function(){e.activeElement!==this.searchbox&&this.setClass(~this.viewport.getAttribute("class").indexOf("hide")?"":"hide")},i.prototype.setClass=function(t){return this.viewport.setAttribute("class","dawn "+t),this},i.prototype.nav=function(){e.activeElement!==this.searchbox&&this.setClass(~this.viewport.getAttribute("class").indexOf("nav")?"":"nav")},i.prototype.focus=function(t){var i=e.activeElement;i!==this.searchbox&&this.searchbox&&(t.preventDefault(),this.setClass("nav").searchbox.focus())},i.prototype.reset=function(){return this.searchbox.blur(),this.viewport.setAttribute("class","dawn"),this},i.prototype.hotkeys=function(t){s[t.keyCode]&&this[s[t.keyCode]].call(this,t)},i.instance=new i(document.getElementsByClassName("dawn")[0]),t.Dawn=i}(window,document);
//# sourceMappingURL=data:application/json;base64,